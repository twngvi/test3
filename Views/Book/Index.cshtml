@model IEnumerable<test3.Models.BookViewModel>

@{
    ViewData["Title"] = "Danh sách sách";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="display-4">@ViewData["Title"]</h1>
                <a asp-action="Create" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus"></i> Thêm sách mới
                </a>
            </div>

            <!-- Form tìm kiếm -->
            <div class="card mb-4">
                <div class="card-body">
                    <form asp-action="Index" method="get">
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fas fa-search"></i>
                            </span>
                            <input type="text" class="form-control" 
                                   name="searchString" 
                                   value="@ViewData["SearchString"]" 
                                   placeholder="Nhấn Enter để tìm kiếm theo tên sách, tác giả hoặc mô tả..." />
                        </div>
                    </form>
                    
                    @if (!string.IsNullOrEmpty(ViewData["SearchString"]?.ToString()))
                    {
                        <div class="mt-3">
                            <div class="alert alert-info mb-0">
                                <i class="fas fa-info-circle"></i> 
                                Tìm thấy <strong>@ViewData["ResultCount"]</strong> kết quả cho từ khóa: 
                                <strong>"@ViewData["SearchString"]"</strong>
                            </div>
                        </div>
                    }
                </div>
            </div>

            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            @if (Model != null && Model.Any())
            {
                <div class="card">
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Mã sách</th>
                                        <th>@Html.DisplayNameFor(model => model.Title)</th>
                                        <th>@Html.DisplayNameFor(model => model.AuthorName)</th>
                                        <th>@Html.DisplayNameFor(model => model.Description)</th>
                                        <th>Ảnh bìa</th>
                                        <th class="text-center">Thao tác</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                <span class="badge bg-secondary">#@item.BookId</span>
                                            </td>
                                            <td>
                                                <strong>@Html.DisplayFor(modelItem => item.Title)</strong>
                                            </td>
                                            <td>
                                                <span class="text-primary">
                                                    <i class="fas fa-user"></i>
                                                    @Html.DisplayFor(modelItem => item.AuthorName)
                                                </span>
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(item.Description))
                                                {
                                                    var shortDesc = item.Description.Length > 80 ? item.Description.Substring(0, 80) + "..." : item.Description;
                                                    <span title="@item.Description">@shortDesc</span>
                                                }
                                                else
                                                {
                                                    <em class="text-muted">Không có mô tả</em>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(item.CoverImagePath))
                                                {
                                                    <img src="@item.CoverImagePath" alt="@item.Title" class="img-thumbnail" style="width: 50px; height: 70px; object-fit: cover;" />
                                                }
                                                else
                                                {
                                                    <div class="text-center p-2 bg-light border rounded" style="width: 50px; height: 70px; display: flex; align-items: center; justify-content: center;">
                                                        <i class="fas fa-image text-muted"></i>
                                                    </div>
                                                }
                                            </td>
                                            <td class="text-center">
                                                <div class="btn-group" role="group">
                                                    <a asp-action="Details" asp-route-id="@item.BookId" class="btn btn-info btn-sm" title="Xem chi tiết">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    <a asp-action="Edit" asp-route-id="@item.BookId" class="btn btn-warning btn-sm" title="Chỉnh sửa">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@item.BookId" class="btn btn-danger btn-sm" title="Xóa">
                                                        <i class="fas fa-trash"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-body text-center py-5">
                        @if (!string.IsNullOrEmpty(ViewData["SearchString"]?.ToString()))
                        {
                            <i class="fas fa-search fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">Không tìm thấy kết quả</h4>
                            <p class="text-muted">
                                Không tìm thấy sách nào phù hợp với từ khóa "<strong>@ViewData["SearchString"]</strong>".
                                <br><small class="text-muted">Xóa từ khóa tìm kiếm để xem tất cả sách hoặc thêm sách mới.</small>
                            </p>
                            <div class="mt-3">
                                <a asp-action="Create" class="btn btn-success">
                                    <i class="fas fa-plus"></i> Thêm sách mới
                                </a>
                            </div>
                        }
                        else
                        {
                            <i class="fas fa-book fa-3x text-muted mb-3"></i>
                            <h4 class="text-muted">Chưa có sách nào</h4>
                            <p class="text-muted">Bắt đầu bằng cách thêm sách đầu tiên của bạn.</p>
                            <a asp-action="Create" class="btn btn-primary">
                                <i class="fas fa-plus"></i> Thêm sách đầu tiên
                            </a>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<script>
    // Auto-focus vào ô tìm kiếm khi trang load
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.querySelector('input[name="searchString"]');
        if (searchInput) {
            // Reset lại trạng thái input nếu bị disabled
            searchInput.disabled = false;
            searchInput.placeholder = 'Nhấn Enter để tìm kiếm theo tên sách, tác giả hoặc mô tả...';
            
            if (!searchInput.value) {
                searchInput.focus();
            }
        }
    });

    // Tìm kiếm khi nhấn Enter
    document.querySelector('input[name="searchString"]').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            e.preventDefault();
            // Hiển thị loading nhưng không disable input
            const originalPlaceholder = this.placeholder;
            this.placeholder = 'Đang tìm kiếm...';
            
            // Submit form
            this.closest('form').submit();
            
            // Reset placeholder sau khi submit (trong trường hợp trang không reload)
            setTimeout(() => {
                this.placeholder = originalPlaceholder;
            }, 100);
        }
    });

    // Tìm kiếm real-time với debounce
    let searchTimeout;
    document.querySelector('input[name="searchString"]').addEventListener('input', function(e) {
        clearTimeout(searchTimeout);
        const searchValue = this.value.trim();
        
        // Nếu xóa hết từ khóa, tự động submit để trả về danh sách mặc định
        if (searchValue.length === 0) {
            searchTimeout = setTimeout(() => {
                this.closest('form').submit();
            }, 500); // Đợi 0.5 giây để tránh submit liên tục
        }
        // Chỉ tự động tìm kiếm nếu có ít nhất 2 ký tự
        else if (searchValue.length >= 2) {
            searchTimeout = setTimeout(() => {
                this.closest('form').submit();
            }, 1000); // Đợi 1 giây sau khi người dùng ngừng gõ
        }
    });

    // Highlight từ khóa tìm kiếm trong kết quả
    const searchTerm = '@ViewData["SearchString"]';
    if (searchTerm && searchTerm.trim() !== '') {
        const regex = new RegExp('(' + searchTerm.replace(/[.*+?^${}()|[\]\\]/g, '\\$&') + ')', 'gi');
        
        // Highlight trong tiêu đề sách
        document.querySelectorAll('td strong').forEach(function(element) {
            element.innerHTML = element.innerHTML.replace(regex, '<mark class="bg-warning">$1</mark>');
        });
        
        // Highlight trong tên tác giả
        document.querySelectorAll('.text-primary').forEach(function(element) {
            element.innerHTML = element.innerHTML.replace(regex, '<mark class="bg-warning">$1</mark>');
        });
    }
</script>
